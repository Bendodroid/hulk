name: Rust
on:
  push:
    branches:
      - gh-readonly-queue/main/**
  pull_request:
jobs:
  required_checks:
    name: Require all CI jobs
    runs-on:
      - self-hosted
      - v2
    needs:
      - check
      - format
      - test
      - build
      - build_subprojects
      - build_web_projects
      - run_behavior_simulator
    steps:
      - name: Status message
        run:
          echo 'All other jobs exited successfully!'
  check:
    name: Check
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Check
        run: |
          ./pepsi clippy --workspace
  format:
    name: Format
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Check
        run: |
          cargo fmt --check
  test:
    name: Test
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Test
        run: |
          cargo test --profile incremental --all-features --workspace
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        target: [nao, webots]
        profile: [release, incremental, dev]
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        run: |
          ln -s /opt/nao/ sdk/current
          ./pepsi build --target ${{ matrix.target }} --profile ${{ matrix.profile }} --no-sdk-installation
  build_subprojects:
    name: Build
    strategy:
      matrix:
        path: [tools/camera_matrix_extractor, tools/depp, tools/fanta, tools/hula, tools/pepsi, tools/twix]
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        run: |
          cd ${{ matrix.path }}
          cargo build --profile incremental --all-features
  build_web_projects:
    name: Build
    runs-on:
      - self-hosted
      - nodejs
    needs: run_behavior_simulator
    strategy:
      matrix:
        path: [tools/flora, tools/sprite]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download recording.json
        if: ${{ matrix.path == 'tools/sprite' }}
        uses: actions/download-artifact@v3
        with:
          name: recording.json
          path: tools/sprite/src/
      - name: Build
        env:
          CI: true
        run: |
          cd ${{ matrix.path }}
          yarn install
          yarn build
  run_behavior_simulator:
    name: Run (behavior_simulator)
    runs-on:
      - self-hosted
      - v2
    strategy:
      fail-fast: false
      matrix:
        scenario: [ empty.json ]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Run all scenes
        run: |
          cargo run --profile incremental --features behavior_simulator --bin behavior_simulator -- tests/behavior/${{ matrix.scenario }} recording.json
      - name: Upload recording.json
        if: ${{ matrix.scenario == 'empty.json' }}
        uses: actions/upload-artifact@v3
        with:
          name: recording.json
          path: recording.json
