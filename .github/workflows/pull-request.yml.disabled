name: Rust
on:
  push:
    branches:
      - gh-readonly-queue/main/**
  pull_request:
jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        target: [NAO, Webots]
        build_type: [Release, Debug]
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        run: |
          ln -s /opt/nao/ sdk/current
          ./pepsi build --target ${{ matrix.target }} --build-type ${{ matrix.build_type }} --no-sdk-installation
  build_behavior_simulator:
    name: Build (behavior_simulator)
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        run: |
          cargo build --features behavior_simulator --bin behavior_simulator --release
  check:
    name: Check
    strategy:
      matrix:
        path: [., macros, module_attributes, spl_network, tools/camera_matrix_extractor, tools/depp, tools/fanta, tools/hula, tools/pepsi, uvcvideo]
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Check
        run: |
          cd ${{ matrix.path }}
          cargo fmt --check
          cargo clippy --all-features -- -D warnings
  test:
    name: Test (.)
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Test
        run: |
          cargo test --all-features
  build_subprojects:
    name: Build
    strategy:
      matrix:
        path: [tools/camera_matrix_extractor, tools/depp, tools/fanta, tools/hula, tools/pepsi]
    runs-on:
      - self-hosted
      - v2
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        run: |
          cd ${{ matrix.path }}
          cargo build --all-features --release
  build_web_projects:
    name: Build
    runs-on:
      - self-hosted
      - nodejs
    strategy:
      matrix:
        path: [tools/flora, tools/sprite]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Build
        env:
          CI: true
        run: |
          cd ${{ matrix.path }}
          yarn install
          yarn build
